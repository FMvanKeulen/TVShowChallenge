// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TVShowTracker.Infra.Data.Context;

namespace TVShowTracker.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ActorShow", b =>
                {
                    b.Property<int>("ActorsId")
                        .HasColumnType("int");

                    b.Property<int>("ShowsId")
                        .HasColumnType("int");

                    b.HasKey("ActorsId", "ShowsId");

                    b.HasIndex("ShowsId");

                    b.ToTable("ActorShow");
                });

            modelBuilder.Entity("TVShowTracker.Domain.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("HasOscar")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 42,
                            HasOscar = false,
                            Name = "Travis Fimmel",
                            Nationality = "Australian"
                        },
                        new
                        {
                            Id = 2,
                            Age = 44,
                            HasOscar = false,
                            Name = "Katheryn Winnick",
                            Nationality = "Canadian"
                        },
                        new
                        {
                            Id = 3,
                            Age = 64,
                            HasOscar = false,
                            Name = "Giancarlo Esposito",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = 4,
                            Age = 66,
                            HasOscar = false,
                            Name = "Bryan Cranston",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = 5,
                            Age = 55,
                            HasOscar = false,
                            Name = "Kiefer Sutherland",
                            Nationality = "English"
                        });
                });

            modelBuilder.Entity("TVShowTracker.Domain.Entities.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShowId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("TVShowTracker.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ShowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShowId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Science fiction"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Documentary"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Action"
                        });
                });

            modelBuilder.Entity("TVShowTracker.Domain.Entities.Show", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Shows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vikings"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Raised by Wolves"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Breaking Bad"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Better Call Saul"
                        },
                        new
                        {
                            Id = 5,
                            Name = "24: Redemption"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Designated Survivor"
                        });
                });

            modelBuilder.Entity("ActorShow", b =>
                {
                    b.HasOne("TVShowTracker.Domain.Entities.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TVShowTracker.Domain.Entities.Show", null)
                        .WithMany()
                        .HasForeignKey("ShowsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TVShowTracker.Domain.Entities.Episode", b =>
                {
                    b.HasOne("TVShowTracker.Domain.Entities.Show", null)
                        .WithMany("Episodes")
                        .HasForeignKey("ShowId");
                });

            modelBuilder.Entity("TVShowTracker.Domain.Entities.Genre", b =>
                {
                    b.HasOne("TVShowTracker.Domain.Entities.Show", null)
                        .WithMany("Genres")
                        .HasForeignKey("ShowId");
                });

            modelBuilder.Entity("TVShowTracker.Domain.Entities.Show", b =>
                {
                    b.Navigation("Episodes");

                    b.Navigation("Genres");
                });
#pragma warning restore 612, 618
        }
    }
}
